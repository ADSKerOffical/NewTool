local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Bottle"
tool.ToolTip = "A basic glass bottle"
tool.Grip = CFrame.Angles(math.rad(-180), 0, 0)
tool.GripPos = Vector3.new(0, 1.5, 0)
tool:SetAttribute("IsBroken", false)

local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.Material = "Glass"
handle.Color = Color3.new(0, 0.3, 0)
handle.Transparency = 0.15

local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshId = "rbxassetid://11723211752"
mesh.Scale = Vector3.new(0.05, 0.05, 0.05)

tool:GetAttributeChangedSignal("IsBroken"):Connect(function(value)
  if tool:GetAttribute("IsBroken") == false then
tool.Name = "Bottle"
tool.ToolTip = "A basic glass bottle"
  elseif tool:GetAttribute("IsBroken") == true then
tool.Name = "Broken bottle"
tool.ToolTip = "Oh, now bottle is broken"
mesh.MeshId = "rbxassetid://16793378131"
mesh.Scale = Vector3.new(1.5, 1.5, 1.5)
  end
end)

local lastPressTime = 0
tool.Activated:Connect(function()
local currentTime = tick()
   if currentTime - lastPressTime >= 1.25 then
      lastPressTime = currentTime
    if tool:GetAttribute("IsBroken") == false then
local anim = Instance.new("Animation", game.Players.LocalPlayer.Character)
anim.AnimationId = "rbxassetid://186934753"
anim.Name = "SlashAnimation"
local he = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim)
he:AdjustSpeed(2)
he:Play()
game.Debris:AddItem(anim, 8)
 
 task.wait(0.15)
 
local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(handle.Position, 6) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

for _, humanoid in next, humanoids do
   humanoid:TakeDamage(20)
   humanoid:ChangeState("FallingDown")
   humanoid.RootPart.Velocity += game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector * 50
   humanoid:UnequipTools()
   
   local sound = Instance.new("Sound", handle)
   sound.SoundId = "rbxassetid://260496290"
   sound.Volume = 1.5
   sound.PlaybackSpeed = 1
   sound:Play()
   game.Debris:AddItem(sound, 10)
   
   tool:SetAttribute("IsBroken", true)
   if tool:GetAttribute("IsBroken") == true then break end
end
     else
local anim = Instance.new("Animation", game.Players.LocalPlayer.Character)
anim.AnimationId = "rbxassetid://96559159"
anim.Name = "SlashAnimation"
local he = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim)
he:AdjustSpeed(3)
he:Play()
game.Debris:AddItem(anim, 10)

 task.wait(0.15)
 
 local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(handle.Position, 6) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

      for _, humanoid in next, humanoids do
         humanoid:TakeDamage(20)
         
         local sound = Instance.new("Sound", humanoid.RootPart)
         sound.SoundId = "rbxassetid://4678745096"
         sound.Volume = 1.5
         sound.PlaybackSpeed = 1
         sound:Play()
         game.Debris:AddItem(sound, 10)
      end
    end
  end
end)
