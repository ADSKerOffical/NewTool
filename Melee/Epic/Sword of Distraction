local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Sword of Distraction"
tool.Grip = CFrame.new(0, -2.3, 0) * CFrame.Angles(0, math.rad(-90), 0)
tool.CanBeDropped = false

local handle = Instance.new("Part", tool)
handle.Name = "Handle"

local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshId = "rbxassetid://452115177"
mesh.TextureId = "rbxassetid://452115180"
mesh.Scale = Vector3.new(0.2, 0.2, 0.2)

local distraction = Instance.new("ProximityPrompt", handle)
distraction.ActionText = "TAP ME PLEASE"
distraction.MaxActivationDistance = 12
distraction.RequiresLineOfSight = false

distraction.Triggered:Connect(function(owner)
  if owner ~= game.Players.LocalPlayer and not (game.Players.LocalPlayer.Team ~= nil and owner.Team == game.Players.LocalPlayer) then
    owner.Character.Humanoid:TakeDamage(65)
    owner.Character.HumanoidRootPart.Velocity = (handle.Position - owner.Character.HumanoidRootPart.Position).Unit * -250
  end
end)

local lastPressTime = 0
tool.Activated:Connect(function()
local currentTime = tick()
   if currentTime - lastPressTime >= 1.5 then
      lastPressTime = currentTime
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://2954124238"
local k = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
k:Play()
k:AdjustSpeed(3)

task.wait(0.15)

local sound = Instance.new("Sound", handle)
sound.SoundId = "rbxassetid://8145344127"
sound.Volume = 1.5
sound.PlaybackSpeed = 1
sound:Play()
game.Debris:AddItem(sound, 6)

local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(handle.Position + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector * 2.5, 7.5) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

     for _, humanoid in next, humanoids do
        humanoid:TakeDamage(45)
        humanoid.RootPart.Velocity = (handle.Position - humanoid.RootPart.Position).Unit * 100
     end
   end
end)
