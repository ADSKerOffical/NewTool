local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Fluff+"
tool.ToolTip = "So soft and hard, like on the fire"

local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.Shape = "Ball"
handle.Material = "Limestone"
handle.Color = Color3.new(0.8, 0, 0)
handle.Size = Vector3.new(1.5, 1.5, 1.5)

local lastPressTime = 0
tool.Activated:Connect(function()
local currentTime = tick()
    if currentTime - lastPressTime >= 3 then
      lastPressTime = currentTime
local anim = Instance.new("Animation", game.Players.LocalPlayer.Character)
anim.AnimationId = "rbxassetid://243827693"
anim.Name = "SwingAnimation"
game.Debris:AddItem(anim, 8)
local he = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim)
he:AdjustSpeed(1.5)
he:Play()

  task.wait(0.15)
  
local sound = Instance.new("Sound", handle)
sound.SoundId = "rbxassetid://12222124"
sound.Volume = 2
sound.PlaybackSpeed = 1
sound:Play()
game.Debris:AddItem(sound, 15)

local Pitch = Instance.new("PitchShiftSoundEffect", sound)
Pitch.Octave = 0.8
Pitch.Priority = 1.5

local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, 10) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

     for _, humanoid in next, humanoids do
      coroutine.wrap(function()
       humanoid.RootPart.Velocity = (handle.Position - humanoid.RootPart.Position).Unit * -175 + Vector3.new(0, 60, 0)
       humanoid.Sit = true
       local BF = Instance.new("BodyForce", humanoid.RootPart)
       BF.Force = Vector3.new(0, humanoid.RootPart:GetMass() * Workspace.Gravity * (1 - -3), 0)
       game.Debris:AddItem(BF, 10.5)
         repeat game:GetService("RunService").Heartbeat:Wait() until humanoid.RootPart.Velocity.Magnitude <= 2 or humanoid:GetState() ~= Enum.HumanoidStateType.Freefall
         humanoid:TakeDamage(30)
       end)()
     end
   end
end)

tool.Equipped:Connect(function()
  local BF = Instance.new("BodyForce", tool.Parent.HumanoidRootPart)
  BF.Force = Vector3.new(0, tool.Parent.HumanoidRootPart:GetMass() * workspace.Gravity * (1 - -2.5), 0)
  tool.Unequipped:Wait()
  BF:Destroy()
end)
