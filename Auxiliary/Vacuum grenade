local player = game.Players.LocalPlayer
local tool = Instance.new("Tool", player:WaitForChild("Backpack"))
tool.Name = "Vacuum grenade"
tool.ToolTip = ""

local handle = Instance.new("Part", tool)
handle.Name = "Handle"

local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshId = "rbxassetid://9552006196"
mesh.TextureId = "rbxassetid://81330734255686"
mesh.Scale = Vector3.new(0.85, 0.85, 0.85)
mesh.VertexColor = Vector3.new(1, 0, 1)

tool.Activated:Connect(function()
  local grenade = handle:Clone()
  grenade.CanCollide = true
  grenade.Size = Vector3.new(2, 2, 2)
  grenade.Parent = Workspace
  grenade.Velocity = player.Character.HumanoidRootPart.CFrame.LookVector * 100
  game.Debris:AddItem(grenade, 15)
  tool:Destroy()
  
  task.wait(2.5)
  
  if grenade then
    local sound = Instance.new("Sound", grenade)
    sound.SoundId = "rbxassetid://6878476054"
    sound.PlaybackSpeed = 1
    sound.Volume = 2
    sound.RollOffMaxDistance = 300
    sound:Play()
    game.Debris:AddItem(sound, 7)
  
      local explosion = Instance.new("Part", Workspace)
      explosion.CanTouch = false
      explosion.CanQuery = false
      explosion.CanCollide = false
      explosion.Material = "Neon"
      explosion.Shape = "Ball"
      explosion.Anchored = true
      explosion.Transparency = 0.5
      explosion.Color = Color3.new(0.9, 0.9, 0.9)
      explosion.Position = grenade.Position
      explosion.Size = Vector3.new(50, 50, 50)
      game.Debris:AddItem(explosion, 5)

  local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(grenade.Position, 24) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

    for _, humanoid in next, humanoids do
       humanoid:TakeDamage(10)
       local bv = Instance.new("BodyVelocity", humanoid.RootPart)
       bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
       bv.Velocity = (explosion.Position - humanoid.RootPart.Position).Unit * 30
       game.Debris:AddItem(bv, 5)
       
       task.spawn(function()
         repeat task.wait()
            bv.Velocity = (explosion.Position - humanoid.RootPart.Position).Unit * 30
         until not bv or not explosion
       end)
    end
      
      local tween = game:GetService("TweenService"):Create(explosion, TweenInfo.new(5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, false, 0), {
           Size = Vector3.new(0, 0, 0),
           Color = Color3.new(0, 0, 0),
           Transparency = 1
        })
      tween:Play()
  end
end)
