local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Spiked Grenade"
tool.GripPos = Vector3.new(-0.1, 0.1, 0)

local handle = Instance.new("Part", tool)
handle.Name = "Handle"

local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshId = "rbxassetid://73838973"
mesh.TextureId = "rbxassetid://73838990"
mesh.Scale = Vector3.new(1.5, 1.5, 1.5)

tool.Activated:Connect(function()
  local bomb = handle:Clone()
  bomb.CanCollide = true
  bomb.Velocity = game.Players.LocalPlayer:GetMouse().Hit.LookVector * 100 + Vector3.new(0, 75, 0)
  bomb.Parent = Workspace
  game.Debris:AddItem(bomb, 10)
  tool:Destroy()
  
    task.delay(2.5, function()
         local explosion = Instance.new("Part", workspace)
         explosion.Anchored = true
         explosion.CanCollide = false
         explosion.CanTouch = false
         explosion.CanQuery = false
         explosion.Position = bomb.Position
         explosion.Shape = "Ball"
         explosion.Size = Vector3.zero
         explosion.Material = "Neon"
         explosion.Color = Color3.new(1, 0.5, 0)
         game.Debris:AddItem(explosion, 7)
         bomb:Destroy()
         
         local sound = Instance.new("Sound", explosion)
         sound.SoundId = "rbxassetid://5137964328"
         sound.Volume = 1
         sound.PlaybackSpeed = 1
         sound:Play()
         
         local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(explosion.Position, 30) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

   for _, humanoid in next, humanoids do
     humanoid:TakeDamage(50)
     humanoid.RootPart.Velocity = (explosion.Position - humanoid.RootPart.Position).Unit * -200
   end
   
   for _, part in next, workspace:GetPartBoundsInRadius(explosion.Position, 30) do
     if part.Anchored == false and not part.Parent:FindFirstChildOfClass("Humanoid") then
       part.Velocity = (explosion.Position - part.Position).Unit * -(300 / (explosion.Position - part.Position).Magnitude)
     end
   end
         
         for i = 1, 7 do
           local spike = Instance.new("Part", Workspace)
           spike.Size = Vector3.new(2, 2, 2)
           spike.Position = explosion.Position + Vector3.new(math.random(-5, 5), 0, math.random(-5, 5))
           spike.Velocity = (explosion.Position - spike.Position).Unit * -math.random(50, 200)
           spike.Color = Color3.new(1, 1, 1)
           spike.Material = "SmoothPlastic"
           
           ghe = spike.Touched:Connect(function(hit)
              if hit.Parent:FindFirstChildOfClass("Humanoid") then
                local humanoid = hit.Parent:FindFirstChildOfClass("Humanoid")
                humanoid:TakeDamage(15)
                spike.CanTouch = false
              end
           end)

      task.spawn(function() 
        repeat wait() until spike.Velocity.Magnitude <= 1 or spike.CanTouch == false 
        ghe:Disconnect()
      end)
           
           local form = Instance.new("SpecialMesh", spike)
           form.MeshId = "rbxassetid://2720161649"
           form.Scale = spike.Size
           game.Debris:AddItem(spike, 10)
         end
         
         local partTweenn2 = game:GetService("TweenService"):Create(explosion, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {
              Size = Vector3.new(30, 30, 30)
           })
         partTweenn2:Play()
         
         task.delay(0.35, function()
           local partTweenn2 = game:GetService("TweenService"):Create(explosion, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {
                 Color = Color3.new(0, 0, 0),
                 Transparency = 1
              })
           partTweenn2:Play()
         end)
    end)
end)
