local player = player or game.Players.LocalPlayer
local tool = Instance.new("Tool", player:WaitForChild("Backpack"))
tool.Name = "Bounce ball" 
tool.ToolTip = "Jump hop jump hop"

local handle = Instance.new("Part", tool)
handle.BrickColor = BrickColor.new(Color3.new(1, 0, 0))
handle.Size = Vector3.new(1, 1, 1)
handle.Name = "Handle"

local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshId = "rbxassetid://9552006196"
mesh.Scale = Vector3.new(0.4, 0.4, 0.4)

tool.Activated:Connect(function()
  local grenade = handle:Clone()
  grenade.CFrame *= CFrame.new(0, 0, -1.5)
  grenade.CanCollide = true
  grenade.Size = Vector3.new(2, 2, 2)
  grenade.Parent = Workspace
  grenade.Velocity = tool.Parent.HumanoidRootPart.CFrame.LookVector * 100
  game.Debris:AddItem(grenade, 15)
  tool:Destroy()
  
  grenade.Touched:Connect(function(hit)
    if not hit:IsDescendantOf(grenade) and grenade.AssemblyLinearVelocity.Magnitude >= 5 then
      local direction = (grenade.Position - hit.Position).Unit
      local origin_direction = grenade.Velocity
      local ricoshet = (origin_direction - 2 * (origin_direction:Dot(direction)) * direction).Unit
      grenade.Velocity = ricoshet * 75 + Vector3.new(0, 15, 0)
      
      local sound = Instance.new("Sound", grenade)
      sound.SoundId = "rbxassetid://14671871879"
      sound:Play()
      game.Debris:AddItem(sound, 3)
      
      if hit.Parent:FindFirstChildOfClass("Humanoid") then
        local humanoid = hit.Parent:FindFirstChildOfClass("Humanoid")
        humanoid:TakeDamage(5 + grenade.AssemblyLinearVelocity.Magnitude / 2.5)
        humanoid.RootPart.AssemblyLinearVelocity = (humanoid.RootPart.Position - grenade.Position).Unit * 50
      end
    end
  end)
end)
