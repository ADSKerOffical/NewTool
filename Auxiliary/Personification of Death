local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Personification of Death"
tool.ToolTip = "The King of Death decided to give a little bit of power to this little statue. It's better not to look at statue"

local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.Color = Color3.new(0, 0, 0)
handle.Locked = true

local mesh = Instance.new("SpecialMesh", handle)
mesh.MeshId = "rbxassetid://29515710"
mesh.Scale = Vector3.new(3, 3, 3)

local lastPressTime = 0
tool.Activated:Connect(function()
  local currentTime = tick()
            if currentTime - lastPressTime >= 20 then
                lastPressTime = currentTime
local statue = Instance.new("Part", workspace)
statue.Anchored = true
statue.Size = Vector3.new(5, 15, 5)
statue.CanCollide = false
statue.Locked = true
statue.Name = "Personification of Death"
statue.Color = Color3.new(0, 0, 0)
statue.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -7, 5)
game.Debris:AddItem(statue, 15)

local lafs = Instance.new("SpecialMesh", statue)
lafs.Scale = Vector3.new(15, 15, 15)
lafs.MeshId = "rbxassetid://29515710"

local sparks = Instance.new("Sparkles", statue)
sparks.TimeScale = 5
sparks.SparkleColor = Color3.new(0, 0, 0)

local sound = Instance.new("Sound", statue)
sound.SoundId = "rbxassetid://1228230799"
sound.Volume = 1.5
sound.PlaybackSpeed = 1
sound.Looped = true
sound:Play()

local partTweenn2 = game:GetService("TweenService"):Create(statue, TweenInfo.new(1, Enum.EasingStyle.Quad), {
        CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 2.5, 5)
    })
    partTweenn2:Play()

local function checkLookDirection(humanoid)
  if not humanoid:IsDescendantOf(game.Players.LocalPlayer.Character) and humanoid.Health > 0 and (statue.Position - humanoid.RootPart.Position).Magnitude <= 100 then
   if humanoid.RootPart.CFrame.LookVector:Dot((statue.Position - humanoid.RootPart.Position).Unit) >= 0.95 then
    humanoid:TakeDamage(5)
    humanoid.Sit = true
local partTweenn2 = game:GetService("TweenService"):Create(humanoid.RootPart, TweenInfo.new(0.05, Enum.EasingStyle.Linear), {
        CFrame = humanoid.RootPart.CFrame
    })
    partTweenn2:Play()

local sound = Instance.new("Sound", humanoid.RootPart)
sound.SoundId = "rbxassetid://4678745096"
sound.Volume = 0.2
sound.PlaybackSpeed = 1
sound.Looped = false
sound:Play()
game.Debris:AddItem(sound, 5)
    end
  end
end

task.spawn(function()
repeat task.wait(0.1)
  local humanoids = {}
for _, part in next, Workspace:GetPartBoundsInRadius(statue.Position, 100) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

       for _, humanoid in next, humanoids do
         checkLookDirection(humanoid)
       end
     until statue.Parent == nil
   end)
  end
end)
