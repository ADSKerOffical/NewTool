local player = player or game.Players.LocalPlayer
local tool = Instance.new("Tool", player:WaitForChild("Backpack"))
tool.Name = "Mr. Cube"
tool.ToolTip = "Your best friend forever"
tool.Grip = CFrame.new(0, -0.35, 0)

local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.Material = "SmoothPlastic"
handle.Color = Color3.new(1, 1, 1)
handle.Size = Vector3.new(0.7, 0.7, 0.7)

local Hat_main = Instance.new("Part", handle)
Hat_main.Size = Vector3.zero
Hat_main.CanCollide = false 

local Hat_weld = Instance.new("Weld", Hat_main)
Hat_weld.Part0 = Hat_main
Hat_weld.Part1 = handle
Hat_weld.C0 = CFrame.new(0, -0.5, 0)

local Hat_mesh = Instance.new("SpecialMesh", Hat_main)
Hat_mesh.MeshId = "rbxassetid://1285237"
Hat_mesh.TextureId = "rbxassetid://259418230"
Hat_mesh.Scale = Vector3.new(0.75, 0.75, 0.75)

local CubeFace = Instance.new("Decal", handle)
CubeFace.Name = "Face"
CubeFace.Face = Enum.NormalId.Front
CubeFace.Texture = "rbxassetid://80801555213854"

local Music = Instance.new("Sound", handle)
Music.Name = "Ambient"
Music.SoundId = ""
Music.Volume = 1
Music.Looped = true

tool.Activated:Connect(function()
  local cube, owner = handle:Clone(), tool.Parent
  cube:FindFirstChild("Ambient"):Destroy()
  cube.Parent = Workspace
  
  local cube_weld = Instance.new("Weld", cube)
  cube_weld.Part0 = cube
  cube_weld.Part1 = owner:FindFirstChild("Head")
  cube_weld.C0 = CFrame.new(-1, 0, 0)
  tool:Destroy()
  
  task.spawn(function()
    local Chumanoid = nil
    repeat task.wait(0.1)
      local Cdistance = math.huge
   for _, part in next, game.Workspace:GetPartBoundsInRadius(cube.Position, 100) do
      if not part:IsDescendantOf(owner) and part.Parent:FindFirstChildOfClass("Humanoid") then
        local humanoid = part.Parent:FindFirstChildOfClass("Humanoid")
        local distance = (part.Position - handle.Position).Magnitude 
          if distance < Cdistance then
            Cdistance = distance
            Chumanoid = humanoid 
          end
        end
      end
    
     if Chumanoid then
       local random, now = math.random(1, 3), os.clock()
       if random == 1 then -- bomb
         local bomb = Instance.new("Part", workspace)
         bomb.Name = "Mr. Cube Bomb"
         bomb.Position = cube.Position
         bomb.Size = Vector3.new(1.5, 1.5, 1.5)
         bomb.Material = "Concrete"
         bomb.Color = Color3.new(0, 0, 0)
         bomb.Shape = "Ball"
         bomb.Velocity = (Chumanoid.RootPart.Position - bomb.Position).Unit * 100 + Vector3.new(0, 20, 0)
         game.Debris:AddItem(bomb, 6)
         
         local sound = Instance.new("Sound", bomb)
         sound.SoundId = "rbxassetid://1508144905"
         sound.Volume = 1
         sound.PlaybackSpeed = 1
         sound:Play()
         
         task.delay(2.5, function()
           if bomb then
             local attach = Instance.new("Part", workspace)
             attach.CanTouch = false
             attach.CanQuery = false
             attach.Anchored = true
             attach.Size = Vector3.zero
             attach.CFrame = bomb.CFrame
             game.Debris:AddItem(attach, 8)
             
             local sound = Instance.new("Sound", attach)
             sound.SoundId = "rbxassetid://18694762392"
             sound.Volume = 1.25
             sound.PlaybackSpeed = 1
             sound:Play()
             
             local explosion= Instance.new("ParticleEmitter", attach)
             explosion.Texture = "rbxassetid://73590073043357"
             explosion.Enabled = false
             explosion.Lifetime = NumberRange.new(3, 3)
             explosion.Size = NumberSequence.new(6, 25)
             explosion.Transparency = NumberSequence.new(0, 1)
             explosion.Speed = NumberRange.new(0, 0)
             explosion:Emit(1)
             
             local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(bomb.Position, 25) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(owner) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
      elseif part.Anchored == false and not part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(owner) then
       part.AssemblyLinearVelocity = (bomb.Position - part.Position).Unit * -200
       if (part.Size.X + part.Size.Y + part.Size.Z) <= 25 then
         part:BreakJoints()
       end
    end
  end

               for _, humanoid in next, humanoids do
                 humanoid:TakeDamage(100)
                 humanoid.RootPart.AssemblyLinearVelocity = (bomb.Position - humanoid.RootPart.Position).Unit * -200
               end
             bomb:Destroy()
           end
         end)
       elseif random == 2 then -- laser
         local shot = Instance.new("Part", workspace)
         shot.Name = "Mr. Cube Shoot"
         shot.CanCollide = false
         shot.Size = Vector3.new(0.9, 0.9, 0.9)
         shot.Color = Color3.new(1, 0, 0)
         shot.Position = cube.Position
         shot.Shape = "Ball"
         shot.Material = "SmoothPlastic"
         game.Debris:AddItem(shot, 10)
         
         local bv = Instance.new("BodyVelocity", shot)
         bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
         bv.Velocity = (Chumanoid.RootPart.Position - shot.Position).Unit * 700
         
         shot.Touched:Connect(function(hit)
           if not hit:IsDescendantOf(owner) and hit.Parent:FindFirstChildOfClass("Humanoid") then
             local humanoid = hit.Parent:FindFirstChildOfClass("Humanoid")
             humanoid:TakeDamage(35)
             humanoid.RootPart.AssemblyLinearVelocity = (shot.Position - humanoid.RootPart.Position).Unit * -50
             shot:Destroy()
           end
         end)
         elseif random == 3 then -- levitation
         local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(cube.Position, 100) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

         for _, humanoid in next, humanoids do
            humanoid:TakeDamage(10)
            
            local bv = Instance.new("BodyVelocity", humanoid.RootPart)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.Velocity = Vector3.new(0, 3, 0)
            game.Debris:AddItem(bv, 2)
            
            bv.Destroying:Connect(function()
              humanoid.RootPart.AssemblyLinearVelocity = (cube.Position - humanoid.RootPart.Position).Unit * -350
              humanoid.Sit = true
              humanoid:TakeDamage(35)
            end)
         end
       end
       repeat task.wait() until os.clock() - now >= 10
     end
    until not cube
  end)
end)

tool.Equipped:Connect(function()
  local musics = {"1839331078", "9043203523", "1839750387", "1847059057", "126315932071673", "127157187599455", "1839630936", "1839664156", "1835450507", "1838582472"}
  Music.SoundId = "rbxassetid://" .. musics[math.random(1, #musics)]
  Music.Playing = true
end)

tool.Unequipped:Connect(function()
  Music.Playing = false
end)
