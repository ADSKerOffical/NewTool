local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Smart gun"
tool.ToolTip = "He decides for you what you want"

local handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.Massless = true
handle.Size = Vector3.new(1.2, 1.2, 1.2)
handle.Material = "SmoothPlastic"

for _, side in next, Enum.NormalId:GetEnumItems() do
  local decal = Instance.new("Decal", handle)
  decal.Texture = "rbxassetid://10160502775"
  decal.Face = side
end

local lastPressTime = 0
tool.Activated:Connect(function()
local currentTime = tick()
    if currentTime - lastPressTime >= 1.25 then
       lastPressTime = currentTime
local shoot = Instance.new("Part", workspace)
shoot.CanCollide = false
shoot.Size = Vector3.new(2, 2, 2)
shoot.Material = "Neon"
shoot.Shape = "Ball"
shoot.Color = Color3.new(0, 0, 0.85)
shoot.CanQuery = false
shoot.Name = "SmartGun_Shoot"
shoot.Position = handle.Position
shoot.CFrame = CFrame.new(shoot.Position, game.Players.LocalPlayer:GetMouse().Hit.Position)
game.Debris:AddItem(shoot, 20)

task.delay(1.5, function()
  task.defer(function()
    shoot.Touched:Connect(function(hit)
      if not hit:IsDescendantOf(game.Players.LocalPlayer.Character) then
        local vac = shoot:Clone()
        vac:FindFirstChildOfClass("BodyVelocity"):Destroy()
        vac.CanTouch = false
        vac.Position = shoot.Position
        vac.CanQuery = false
        vac.Shape = "Ball"
        game.Debris:AddItem(vac, 12)
        
        local partTweenn2 = game:GetService("TweenService"):Create(vac, TweenInfo.new(1.5, Enum.EasingStyle.Quad), {
            Size = Vector3.new(40, 40, 40)
         })
        partTweenn2:Play()
      end
    end)
  end)
  
 local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(shoot.Position, 100) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

  for _, humanoid in next, humanoids do
    local shootick = shoot:Clone()
    shootick.Name = "SmartGun_Shootick"
    shootick.Parent = workspace
    shootick:FindFirstChildOfClass("BodyVelocity").Velocity = (shootick.Position - humanoid.RootPart.Position).Unit * -400
    game.Debris:AddItem(shootick, 10)
    
    shootick.Touched:Connect(function(hit)
      if not hit:IsDescendantOf(game.Players.LocalPlayer.Character) then
        if not string.find(hit.Name, "SmartGun") then
          local explosion = shootick:Clone()
          explosion.CanTouch = false
          explosion.Anchored = true
          explosion.Position = shootick.Position
          explosion.Shape = "Ball"
          game.Debris:AddItem(explosion, 2)
          
          local partTweenn2 = game:GetService("TweenService"):Create(explosion, TweenInfo.new(1, Enum.EasingStyle.Linear), {
               Size = Vector3.new(30, 30, 30),
               Transparency = 1
            })
          partTweenn2:Play()
          
         local humanoids = {}
for _, part in next, workspace:GetPartBoundsInRadius(explosion.Position, 30) do
    if part.Parent:IsA("Model") and part.Parent:FindFirstChildOfClass("Humanoid") and not part:IsDescendantOf(game.Players.LocalPlayer.Character) then
      if not table.find(humanoids, part.Parent:FindFirstChildOfClass("Humanoid")) then
        table.insert(humanoids, part.Parent:FindFirstChildOfClass("Humanoid"))
      end
    end
  end

       for _, humanoid in next, humanoids do
          humanoid:TakeDamage(25 + (humanoid.MaxHealth <= 2500 and humanoid.MaxHealth / 10 or 0))
          humanoid.RootPart.Velocity = (shoot.Position - humanoid.RootPart.Position).Unit * 150
       end
          
           for _, decal in next, explosion:GetChildren() do
             if decal:IsA("Decal") then
               explosion:GetPropertyChangedSignal("Transparency"):Connect(function()
                 decal.Transparency = explosion.Transparency
               end)
             end
           end
          
          shootick:Destroy()
        end
      end
    end)
  end
  
  shoot.Touched:Connect(function(part)
    
  end)
end)

       for _, decal in next, shoot:GetChildren() do
          if decal:IsA("Decal") then
            shoot:GetPropertyChangedSignal("Transparency"):Connect(function()
              decal.Transparency = shoot.Transparency
            end)
          end
       end

local bv = Instance.new("BodyVelocity", shoot)
bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
bv.Velocity = game.Players.LocalPlayer:GetMouse().Hit.LookVector * 50
    end
end)

task.spawn(function()
repeat task.wait()
 if tool.Parent == game.Players.LocalPlayer.Character then
  local humanoid = nil
 for _, part in next, Workspace:GetPartBoundsInRadius(handle.Position, 78) do
   if not part:IsDescendantOf(game.Players.LocalPlayer.Character) and part.Parent:FindFirstChildOfClass("Humanoid") then
     humanoid = part.Parent:FindFirstChildOfClass("Humanoid")
     break
   end
 end
 
 if humanoid and not humanoid.RootPart:FindFirstChild("SmartGun_Highlight") then
   task.spawn(function()
    local highlight = Instance.new("Highlight", humanoid.Parent)
    highlight.Name = "SmartGun_Highlight"
    highlight.Adornee = highlight.Parent
    highlight.OutlineColor = Color3.new(0, 1, 1)
    highlight.FillColor = Color3.new(0, 1, 1)
    highlight.FillTransparency = 0.65
    repeat wait() until (handle.Position - humanoid.RootPart.Position).Magnitude > 80
    highlight:Destroy()
    end)
  end
end
until not handle or not tool
end)
